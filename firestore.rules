rules_version = '2';
service cloud.firestore {
match /databases/{database}/documents {
function isSignedIn() { return request.auth != null; }
function isAdmin() { return isSignedIn() && request.auth.token.role == 'admin'; }
function isSelf(uid) { return isSignedIn() && request.auth.uid == uid; }


match /users/{uid} {
allow read: if isSelf(uid) || isAdmin();
allow write: if isSelf(uid) || isAdmin();
}


match /challenges/{id} {
allow read: if true; // public list
allow create, update, delete: if isAdmin();
}


match /submissions/{id} {
allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
allow read: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
allow update: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid && resource.data.status in ['draft','needs_revision']);
allow delete: if isAdmin();
}


match /certificates/{id} {
allow read: if isSignedIn();
allow create, update, delete: if isAdmin();
}
}
}